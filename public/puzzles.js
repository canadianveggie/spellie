// @ts-check

// spoiler alert
const historicalWordsEasy = [
  "VE9MRA==",
  "UE9ORA==",
  "V09SRA==",
  "VEVBTQ==",
  "TE9WRQ==",
  "RE9HUw==",
  "Q1VQUw==",
  "U0FNRQ==",
  "UElHUw==",
  "Q0xBVw==",
  "QklLRQ==",
  "TEVHUw==",
  "R0lGVA==",
  "V0lERQ==",
  "UkFURQ==",
  "TUlORA==",
  "U1dBTg==",
  "QkVMVA==",
  "Rk9SVA==",
  "VEVOVA==",
  "U09GVA==",
  "REVOVA==",
  "U0xJUA==",
  "Q0hBVA==",
  "S0FMRQ==",
  "U0FMVA==",
  "TE9PSw==",
  "QkFLRQ==",
  "SEFWRQ==",
  "Q0FWRQ==",
  "UEFSSw==",
  "TEFORA==",
  "QkFMTA==",
  "UEFXUw==",
  "RklMTA==",
  "TFVDSw==",
  "SE9STg==",
  "Q0xBTQ==",
  "R1JPVw==",
  "R0lWRQ==",
  "TkFJTA==",
  "TEVOVA==",
  "SE9MRA==",
  "TUlDRQ==",
  "RkFLRQ==",
  "T1dMUw==",
  "VEFQUw==",
  "RkxBVA==",
  "VEhJUw==",
  "VE9ZUw==",
  "Sk9LRQ==",
  "VFJFRQ==",
  "QkVMTA==",
  "UFJBWQ==",
  "VkFOUw==",
  "SlVNUA==",
  "Uk9ERQ==",
  "VFJJUA==",
  "U0xPVw==",
  "Q0hPUA==",
  "RUFDSA==",
  "UEVUUw==",
  "TUlOVA==",
  "Qk9PVA==",
  "TUFUUw==",
  "S0lDSw==",
  "RUdHUw==",
  "TUlMSw==",
  "VE9BRA==",
  "U0FOSw==",
  "S0VFUA==",
  "Q0FSRQ==",
  "Q0FTVA==",
  "UFVNUA==",
  "U0FJRA==",
  "TFVNUA==",
  "V0lORw==",
  "UklORw==",
  "U09ORw==",
  "U0hPRQ==",
  "RFVNUA==",
  "RFJBVw==",
  "Q0FLRQ==",
  "U1RBUg==",
  "U0lOSw==",
  "V0VTVA==",
  "R09ORQ==",
  "S0lTUw==",
  "UEVTVA==",
  "U0VMTA==",
  "UkVTVA==",
  "R0VSTQ==",
  "SEVBRA==",
  "UkFUUw==",
  "R1VTVA==",
  "SElERQ==",
  "QlJBRw==",
  "QkVEUw==",
  "TUFJRA==",
  "VFJBUA==",
  "Q09PTA==",
  "REVTSw==",
  "RElNRQ==",
  "Q1JPVw==",
  "SE9NRQ==",
  "RElSVA==",
  "RklTSA==",
  "R09MRg==",
  "TEFXTg==",
  "Rk9SSw==",
  "RUFTVA==",
  "UElDSw==",
  "UExBWQ==",
  "TVVDSA==",
  "VFVSTg==",
  "Qk9ORQ==",
  "Tk9TRQ==",
  "U09NRQ==",
  "Q0FSRA==",
  "UkVBRA==",
  "V09MRg==",
  "U0hPUA==",
  "REVBTA==",
  "Q0FNRQ==",
  "Rk9MRA==",
  "V0FMTA==",
  "U09GQQ==",
  "Rk9PVA==",
  "U0FJTA==",
  "SFVHUw==",
  "U0hJUA==",
  "V0FSTQ==",
  "UkVOVA==",
  "Q09BVA==",
  "TEVBRg==",
  "RkVFRA==",
  "UEFJTg==",
  "Q0FORQ==",
  "TUFTSw==",
  "R0lSTA==",
  "RklORQ==",
  "RkxBRw==",
  "R1JFVw==",
  "UEFHRQ==",
  "Rk9VUg==",
  "U1RBWQ==",
  "VVNFRA==",
  "RlJBWQ==",
  "VEhFWQ==",
  "Qk9BVA==",
  "UlVTVA==",
  "VEFDTw==",
  "V0lUSA==",
  "RE9UUw==",
  "Q09STg==",
  "UEFWRQ==",
  "V09STQ==",
  "U1RPUA==",
  "UkFOSw==",
  "U1RFVw==",
  "U09BUA==",
  "S05PVw==",
  "U0laRQ==",
  "QkVBUg==",
  "SEFURQ==",
  "TkFNRQ==",
  "QkFORw==",
  "TkVUUw==",
  "TElWRQ==",
  "V0FWRQ==",
  "QU5UUw==",
  "R0FNRQ==",
  "U0FORA==",
  "QkVFUA==",
  "U1RPVw==",
  "TElLRQ==",
  "SElMTA==",
  "SE9PSw==",
  "SEVBVA==",
  "SEVSTw==",
  "RElTSA==",
  "V0FOVA==",
  "Q09ORQ==",
  "QlVOUw==",
  "U1BJVA==",
  "V09SSw==",
  "RE9ORQ==",
  "Q0FSVA==",
  "U0hPVw==",
  "TU9WRQ==",
  "QkFCWQ==",
  "VEFLRQ==",
  "RFVTVA==",
  "QkFUUw==",
  "SE9QRQ==",
  "SkFXUw==",
  "TUVBTA==",
  "QlVTSA==",
  "QlVHUw==",
  "Q09PSw==",
  "SEFORA==",
  "Q1VCRQ==",
  "RFJPUA==",
  "V0FJVA==",
  "Qk9PSw==",
  "T05DRQ==",
  "Uk9DSw==",
  "TkVTVA==",
  "Qk9STg==",
  "Uk9PTQ==",
  "RE9DSw==",
  "QkVBVA==",
  "R0FURQ==",
  "R09MRA==",
  "UElLRQ==",
  "TUFERQ==",
  "VEFOSw==",
  "QkFSTg==",
  "TUVBVA==",
  "SEFSRA==",
  "VVBPTg==",
  "TElPTg==",
  "QkFOSw==",
  "TU9PTg==",
  "RkFMTA==",
  "V0lOUw==",
  "SU5UTw==",
  "UkFHUw==",
  "TUlORQ==",
  "TElORQ==",
  "U0lERQ==",
  "RkFDRQ==",
  "SEVBTA==",
  "U0lORw==",
  "U0xFRA==",
  "V0hFTg==",
  "WUFSTg==",
  "RFVDSw==",
  "V0FTSA==",
  "QVJNUw==",
  "TUFOWQ==",
  "RUFTWQ==",
  "WUFNUw==",
  "Q09XUw==",
  "SEFSTQ==",
  "TEFLRQ==",
  "UkFORw==",
  "Vk9URQ==",
  "RFJVTQ==",
  "RlJFRQ==",
  "U0FMRQ==",
  "QkFUSA==",
  "TkFQUw==",
  "RkFORw==",
  "QkxFVw==",
  "V0FMSw==",
  "TEFTVA==",
  "VEFTSw==",
  "Wk9ORQ==",
  "VkVTVA==",
  "Q0FTRQ==",
  "U1VDSA==",
  "U0VBVA==",
  "REFSSw==",
  "RklORA==",
  "REFNUA==",
  "SEVMUA==",
  "RlJPTQ==",
  "RklSRQ==",
  "QkxVRQ==",
  "Uk9QRQ==",
  "RkFURQ==",
  "TUFURQ==",
  "TElQUw==",
  "VEFMTA==",
  "UEVBUg==",
  "VEFJTA==",
  "UkFJTg==",
  "U0hVVA==",
  "Q1JFVw==",
  "TElOSw==",
  "SElOVA==",
  "VEhFTQ==",
  "Q1JBTQ==",
  "RlJPRw==",
  "Q0xBUA==",
  "Sk9CUw==",
  "Rk9PRA==",
  "QkVOVA==",
  "Qk9MRA==",
  "Q0xVQg==",
  "REVFUA==",
  "SlVTVA==",
  "U0FWRQ==",
  "REFSVA==",
  "UExVTQ==",
  "Q1JBQg==",
  "RFJJUA==",
  "UlVHUw==",
  "TEFURQ==",
  "REVFUg==",
  "RVlFUw==",
  "T1ZFUg==",
  "V0lSRQ==",
  "VEVTVA==",
  "UEFTVA==",
  "SElLRQ==",
  "VE9FUw==",
  "QkVBTQ==",
  "RUFSUw==",
  "U1dJTQ==",
  "U09MRA==",
  "WkVSTw==",
  "TE9ORw==",
  "Q09MRA==",
  "VElNRQ==",
  "VFdJRw==",
  "Q0xBWQ==",
  "U05VRw==",
  "VE9XTg==",
  "VEhFTg==",
  "U05BUA==",
  "QkFSSw==",
  "UExBTg==",
  "QkFORA==",
  "Q1VSTA==",
  "QlVNUA==",
  "SE9MRQ==",
  "UEFDSw==",
  "TkVDSw==",
  "VkVSWQ==",
  "VEVMTA==",
  "QkVORA==",
  "Q0FHRQ==",
  "Q0FOUw==",
  "U0lDSw==",
  "R09BVA==",
];

const historicalWordsMedium = [
  "UExPVA==",
  "Rk9VTkQ=",
  "VEhJTks=",
  "QkxBQ0s=",
  "RFJFQU0=",
  "Q0hPUkU=",
  "U0hJUlQ=",
  "R09JTkc=",
  "VFJJQ0s=",
  "VkFTRQ==",
  "VEhJTkc=",
  "SE9QUw==",
  "U0xBTQ==",
  "U0xBTlQ=",
  "QkFSRQ==",
  "TFVOQ0g=",
  "Q09JTA==",
  "U1RFQU0=",
  "U1BPS0U=",
  "R1JBREU=",
  "VEVBQ0g=",
  "VEhSRUU=",
  "Q09NRVQ=",
  "UElOVA==",
  "T1RIRVI=",
  "WU9VUg==",
  "Q1JFQU0=",
  "UEFSVFk=",
  "U1BBUks=",
  "SE9ORVk=",
  "TUVMT04=",
  "QkxBTUU=",
  "VE9EQVk=",
  "VE9UQUw=",
  "QlVOQ0g=",
  "R1JFRU4=",
  "Q0hJTEQ=",
  "QkxPVw==",
  "RlJFU0g=",
  "VEhJUkQ=",
  "TUlOVVM=",
  "QkVBTlM=",
  "U0tVTks=",
  "RklOQ0g=",
  "VFJVQ0s=",
  "QkxFTkQ=",
  "V0hJVEU=",
  "UElUQ0g=",
  "T0xJVkU=",
  "QkVJTkc=",
  "R1JJTlM=",
  "SE9STlM=",
  "QUxBUk0=",
  "U0tBVEU=",
  "RkxPUA==",
  "V0VOVA==",
  "V1JJVEU=",
  "RkxBU0g=",
  "UElFQ0U=",
  "UkFESU8=",
  "U01BTEw=",
  "VE9PVEg=",
  "RU5KT1k=",
  "UEFUQ0g=",
  "UFJJTUU=",
  "QUZURVI=",
  "QlVOTlk=",
  "VEhPU0U=",
  "VFJJQkU=",
  "QUdSRUU=",
  "RUFSTFk=",
  "RUFSVEg=",
  "QkxJTks=",
  "R0xVRQ==",
  "QUdBSU4=",
  "VFdJU1Q=",
  "QkVSUlk=",
  "R1JJTkQ=",
  "VFVORQ==",
  "QkFTSw==",
  "UFVSRQ==",
  "U0NPUkU=",
  "U1VTSEk=",
  "Rk9SQ0U=",
  "Sk9JTg==",
  "QU5HRVI=",
  "UkFHRQ==",
  "UExBTlQ=",
  "U1BFTkQ=",
  "RElSVFk=",
  "QUNUT1I=",
  "R1JPVkU=",
  "VU5DTEU=",
  "R0xPQkU=",
  "SEVBUkQ=",
  "TE9DSw==",
  "RU1QVFk=",
  "TUFSSw==",
  "RlJBTUU=",
  "U1RBQ0s=",
  "U05BQ0s=",
  "V0lORFk=",
  "QkVBU1Q=",
  "TE9VRA==",
  "QkxBU1Q=",
  "QVBBUlQ=",
  "RklHSFQ=",
  "QUxFUlQ=",
  "U0hFRVA=",
  "U0xJREU=",
  "Q0hFU1Q=",
  "U05BS0U=",
  "UEFTVEE=",
  "UElBTk8=",
  "UFJJREU=",
  "U0hFRVQ=",
  "UkVQTFk=",
  "Q0xPQ0s=",
  "Uk9CSU4=",
  "TElPTlM=",
  "S09BTEE=",
  "U1RBUlQ=",
  "U0hPUkU=",
  "QlJPT00=",
  "U1BFTlQ=",
  "VEhFU0U=",
  "RlJPV04=",
  "QUhFQUQ=",
  "U1RPUkU=",
  "REFOQ0U=",
  "VEhST1c=",
  "U1dJTVM=",
  "UFJJTlQ=",
  "UkVBRFk=",
  "U0hJTlk=",
  "QkxPQ0s=",
  "Q09BU1Q=",
  "VEVBUg==",
  "VFJBREU=",
  "R1JPV1M=",
  "V0FURVI=",
  "R09PU0U=",
  "U1RBVEU=",
  "U1VSRQ==",
  "RkVBU1Q=",
  "U0VBTQ==",
  "R1JJVA==",
  "V0lHUw==",
  "VEhBTks=",
  "V0hFUkU=",
  "UE9XRVI=",
  "QkVBRA==",
  "TFVOR1M=",
  "QlJBSU4=",
  "TU9MRA==",
  "RUxCT1c=",
  "U0hFTEw=",
  "SEFMRg==",
  "VU5ERVI=",
  "TkVWRVI=",
  "U0hBUEU=",
  "QkVBQ0g=",
  "SFVHRQ==",
  "RklSRUQ=",
  "TEVWRUw=",
  "RlJVSVQ=",
  "VEFCTEU=",
  "SFVOVA==",
  "U05PUkU=",
  "QUdFUw==",
  "QkxJTVA=",
  "TUlHSFQ=",
  "REFTSA==",
  "U0lHSFQ=",
  "V0hJQ0g=",
  "QVdBWQ==",
  "UklDSA==",
  "Q1VSTFk=",
  "Q0hBSU4=",
  "U1RPVkU=",
  "U1BFQUs=",
  "TUVURVI=",
  "U0hBUlA=",
  "QlJJTkc=",
  "U1RJQ0s=",
  "U09DSw==",
  "R0xPUlk=",
  "QlJJQ0s=",
  "U1RFRVA=",
  "U01BUlQ=",
  "SEVBVlk=",
  "R1JBUEU=",
  "U1RPTkU=",
  "Q0xBU1M=",
  "U01FTEw=",
  "UFJJQ0U=",
  "QU5HUlk=",
  "RVhUUkE=",
  "QlJJREU=",
  "VEhST0I=",
  "U0xJQ0U=",
  "VE9BRFM=",
  "QkFLRVI=",
  "TUFUQ0g=",
  "Q1JPV04=",
  "U0hBUks=",
  "TU9WSUU=",
  "QlJPV04=",
  "Q0FNUFM=",
  "R1JBTkQ=",
  "QUxPTkU=",
  "QlJVU0g=",
  "Q0hFU1M=",
  "Q1JBU0g=",
  "TU9VVEg=",
  "Q1JBVEU=",
  "UEFMRQ==",
  "U1RVRFk=",
  "U1RSQVk=",
  "R1VUUw==",
  "WkVCUkE=",
  "Q0xPVUQ=",
  "TFVDS1k=",
  "T05MWQ==",
  "UkFLRQ==",
  "SFVSVA==",
  "RklFTEQ=",
  "R09BVFM=",
  "VFJBSUw=",
  "T0NFQU4=",
  "Uk9ZQUw=",
  "U1RVQ0s=",
  "VFJVVEg=",
  "U0FDSw==",
  "U0NSQVA=",
  "U1RPUk0=",
  "TUFHSUM=",
  "TEVBVkU=",
  "RFJPVkU=",
  "SE9VU0U=",
  "RFJJTks=",
  "RkFDRVM=",
  "U0hBUkU=",
  "RFJJVkU=",
  "U0NBTEU=",
  "SlVJQ0U=",
  "SE9SU0U=",
  "U1dJTkc=",
  "TU9ORVk=",
  "VFJBSU4=",
  "VFJBQ0U=",
  "TUFOR08=",
  "Q0hBTEs=",
  "U1BFRUQ=",
  "TUVBTg==",
  "SEFORFM=",
  "V09SRFM=",
  "VE9BU1Q=",
  "Q1JPV0Q=",
  "U05BSUw=",
  "UklHSFQ=",
  "TVVHUw==",
  "VVBTRVQ=",
  "Q0FORFk=",
  "UEFSS1M=",
  "U0xFRVQ=",
  "UExVUw==",
  "U0FZUw==",
  "WUFSRA==",
  "VElSRUQ=",
  "UElOQ0g=",
  "QlVTWQ==",
  "V0VFSw==",
  "VElHSFQ=",
  "UEVBQ0U=",
  "TEFURVI=",
  "Uk9MRQ==",
  "SEFSRQ==",
  "SFVSUlk=",
  "VEVBUlM=",
  "R1JPVVA=",
  "UEFUSA==",
  "Q0xPV04=",
  "QlJBTkQ=",
  "RlVMTA==",
  "Q09VTEQ=",
  "U09SUlk=",
  "R1JBVlk=",
  "V0hBVA==",
  "Q1VSRQ==",
  "TU9SRQ==",
  "TEVBU1Q=",
  "V09PTA==",
  "UElFUw==",
  "U0NSRVc=",
  "Qk9USA==",
  "U1RBTVA=",
  "RkxBUA==",
  "QVJPU0U=",
  "UElORQ==",
  "V0hBTEU=",
  "V0hFRUw=",
  "RlJPU1Q=",
  "Q0xFQU4=",
  "Q1JBTks=",
  "UEVBQ0g=",
  "UkFNUw==",
  "TE9DQUw=",
  "REVBUg==",
  "VU5USUw=",
  "UEFOVFM=",
  "T1JERVI=",
  "Tk9SVEg=",
  "VEhVTVA=",
  "U0xFRVA=",
  "UkVBQ0g=",
  "QkFJVA==",
  "Q0xBU0g=",
  "R0lGVFM=",
  "QklSVEg=",
  "U0hPRVM=",
  "TElHSFQ=",
  "RE9FUw==",
  "UEFOREE=",
  "UklWRVI=",
  "RklSU1Q=",
  "QlVSTg==",
  "V09NQU4=",
  "QlVZRVI=",
  "Q0FTSA==",
  "UlVERQ==",
  "Tk9ORQ==",
  "SkFJTA==",
  "U1RPT0w=",
  "RlJPTlQ=",
  "VFJVU1Q=",
  "U01PS0U=",
];

const historicalWordsHard = [
  "U0FVQ1k=",
  "TE9ZQUw=",
  "Q1JBTkU=",
  "U0NBUkY=",
  "RkxPV0VS",
  "TU9OVEg=",
  "TUFZT1I=",
  "U1dFQVQ=",
  "U0tJTEw=",
  "U1RSSU5H",
  "QkVOQ0g=",
  "RkFNSUxZ",
  "Q09PS0lF",
  "U1VOTlk=",
  "TU9UT1I=",
  "R0lBTlQ=",
  "VEhSRUFE",
  "Q1lDTEU=",
  "RE9VQkxF",
  "QkVHQU4=",
  "VFJJUExF",
  "RFJBR09O",
  "VElDS0VU",
  "QURWSUNF",
  "Uk9VR0g=",
  "SU5TSVNU",
  "Tk9JU0U=",
  "SVNMQU5E",
  "UkVUVVJO",
  "R0xPU1M=",
  "QkFTSUM=",
  "VEhJQ0s=",
  "Q0lSQ0xF",
  "V0hPU0U=",
  "U09VR0hU",
  "Q0xPVkVS",
  "UFJBSVNF",
  "SlVHR0xF",
  "U1BSSU5H",
  "QkVDT01F",
  "VEhST05F",
  "U1BFRURZ",
  "U0xJR0hU",
  "UE9SVEVS",
  "R1JBU1M=",
  "VFJJRUQ=",
  "Q0FOQUw=",
  "VkFMVUU=",
  "UkVQT1JU",
  "U1RJTEw=",
  "U0lMTFk=",
  "VElEQUw=",
  "R0VFU0U=",
  "SU5DT01F",
  "RklOR0VS",
  "Q0FCTEU=",
  "VFVSVExF",
  "QlJBVkU=",
  "UkFOR0U=",
  "UE9DS0VU",
  "UFVaWkxF",
  "VEVBQ1VQ",
  "R0FUSEVS",
  "QkxBWkU=",
  "V0FOREVS",
  "UkVNSU5E",
  "U0VBUkNI",
  "U09VVEg=",
  "R0VOVExF",
  "Q0FDVFVT",
  "Q09VU0lO",
  "UExBTkVU",
  "U0hBVkU=",
  "VE9JTFM=",
  "U0lMVkVS",
  "U0VDT05E",
  "VElQUEVE",
  "Q0hVVEU=",
  "VE9VQ0g=",
  "VEhSSUZU",
  "U0hPVUxE",
  "VEFVR0hU",
  "TklOSkE=",
  "QkFUVExF",
  "U1VHQVI=",
  "R1JFRVQ=",
  "Qk9VR0hU",
  "TU9USEVS",
  "U0NSQVBF",
  "RkxVVEU=",
  "QVJHVUU=",
  "Q09MTEFS",
  "UFJJWkU=",
  "SU5WRU5U",
  "VklSVFVF",
  "TElUVExF",
  "V0VBVkU=",
  "REVDSURF",
  "V09VTEQ=",
  "VFVSS0VZ",
  "V1JJVEVS",
  "VU5LSU5E",
  "Q09NSU5H",
  "QlVSU1Q=",
  "VU5MT0NL",
  "QVZPSUQ=",
  "RE9DVE9S",
  "Q09WRVQ=",
  "UExJR0hU",
  "V0VBTFRI",
  "QVdBUkU=",
  "REFJTFk=",
  "UE9JTlQ=",
  "UE9UQVRP",
  "Tk9JU1k=",
  "RU1QTE9Z",
  "Q0VMRVJZ",
  "Q09CV0VC",
  "TUFHTkVU",
  "U1RPTEVO",
  "QkFSTlM=",
  "TEFVR0g=",
  "V09SS0VS",
  "Q0hPT1NF",
  "RkxFRVQ=",
  "RlJFRVpF",
  "TEFSR0U=",
  "RFJBTks=",
  "Q0hJTEk=",
  "RkFUSEVS",
  "QVdGVUw=",
  "U1VNTUVS",
  "QkVBVkVS",
  "REVGSU5F",
  "V0hPTEU=",
  "Q0FSUlk=",
  "R1JJTEw=",
  "U1RST05H",
  "Q09VUExF",
  "RkFJUlk=",
  "QkxFU1M=",
  "TUFQTEU=",
  "QVZFTlVF",
  "U0lTVEVS",
  "U0FMQUQ=",
  "UElDS0xF",
  "V0lORE9X",
  "U0VWRU4=",
  "VEhST0FU",
  "VEFSR0VU",
  "QlVCQkxF",
  "UkVNQVJL",
  "QU5JTUFM",
  "RUFHRVI=",
  "V1JJU1Q=",
  "RFdFTEw=",
  "Uk9BU1Q=",
  "Q0hFUlJZ",
  "VEhFSVI=",
  "QU1PVU5U",
  "SlVER0U=",
  "UFVSUExF",
  "QkxBTks=",
  "U0xFRVZF",
  "Vk9DQUw=",
  "VklTVUFM",
  "VklPTElO",
  "QlVTSEVT",
  "Q09VR0g=",
  "QlVJTFQ=",
  "TVlTRUxG",
  "Qk9BUkQ=",
  "U1RBRkY=",
  "VEFVTlQ=",
  "QlVDS0VU",
  "TkFUVVJF",
  "U1BJREVS",
  "QlJJR0hU",
  "V0lEVEg=",
  "RUlHSFQ=",
  "T1dORVI=",
  "U1RSRUVU",
  "Uk9VVEU=",
  "REFNQUdF",
  "RVhDVVNF",
  "QkVUVEVS",
  "Q0xPU0U=",
  "QUNUSU9O",
  "QUJPVVQ=",
  "QURPUFQ=",
  "SEFQUEVO",
  "QVdISUxF",
  "QlJFQVRI",
  "SVRTRUxG",
  "U1RSQUlO",
  "SE9QSU5H",
  "QUJPVkU=",
  "TU9OS0VZ",
  "SUdOT1JF",
  "R1VFU1M=",
  "VklERU8=",
  "RkxPVVI=",
  "TUFOQUdF",
  "UkVQQUlS",
  "VEhJUlNU",
  "QlVUVEVS",
  "RFJFU1M=",
  "UkVDT1JE",
  "U1FVSVJU",
  "UE9VTkQ=",
  "U0hSSU1Q",
  "U0NSRUFN",
  "RUxFVkVO",
  "VU5GQUlS",
  "U1lSVVA=",
  "TU9QUEVE",
  "Q0FNRVJB",
  "UEVOQ0lM",
  "Qk9BU1Q=",
  "UkFOQ0g=",
  "TEVBUk5T",
  "TFVNQkVS",
  "TElaQVJE",
  "SE9MTE9X",
  "RVFVQUw=",
  "U0lNUExF",
  "VkVOT00=",
  "Q09BQ0g=",
  "RU5PVUdI",
  "Q0xPVEg=",
  "TkFUSU9O",
  "TEVER0U=",
  "QlJJREdF",
  "VFJPUEhZ",
  "TlVNQkVS",
  "U09MVkU=",
  "Q1JFUFQ=",
  "TVVTSUM=",
  "U1RPTEU=",
  "VEFTVEU=",
  "U0hPV0VS",
  "UElMTE9X",
  "T1JBTkdF",
  "UE9SQ0g=",
  "VVNFRlVM",
  "RElOTkVS",
  "U1BPTkdF",
  "SEFQUFk=",
  "U1dJUkw=",
  "QkFOS0VS",
  "RkxVTkc=",
  "Q0VMTEFS",
  "Q0hBU0U=",
  "Q1JBWU9O",
  "Q09VUlQ=",
  "RVZFUlk=",
  "RE9aRU4=",
  "U0xFUFQ=",
  "UEFSRU5U",
  "QU1PTkc=",
  "V1JJTkc=",
  "UEVQUEVS",
  "QkVGT1JF",
  "R0hPU1Q=",
  "UVVJTFQ=",
  "U0hJRUxE",
  "U1RSRUFN",
  "R0xPVkU=",
  "RklGVEg=",
  "VE9VR0g=",
  "U0FOREFM",
  "WklQUEVE",
  "R1VJTEQ=",
  "UElaWkE=",
  "UVVJRVQ=",
  "U1RBVFVF",
  "U1RSSUtF",
  "UExFQVNF",
  "SU5TSURF",
  "U0VBU09O",
  "U0hPT0s=",
  "U1BFRUNI",
  "Q0hBUkdF",
  "UkVEVUNF",
  "VU5USUU=",
  "U0NFTlQ=",
  "SVNTVUU=",
  "R1VFU1Q=",
  "SEVJR0hU",
  "Rk9MTE9X",
  "Q0hPU0U=",
  "S05BQ0s=",
  "QkVFVExF",
  "WU9VTkc=",
  "SEFUQ0g=",
  "RVhFUlQ=",
  "QkFOSk8=",
  "VEhVTUI=",
  "SEFNTUVS",
  "RkxJR0hU",
  "QVdBUkQ=",
  "VEhST1dO",
  "U0NBUkNF",
  "R1VJVEFS",
  "RE9OS0VZ",
  "UkVBU09O",
  "TUlERExF",
  "Q0VOVEVS",
  "RVhDRUw=",
  "V1JPTkc=",
  "RlJJRU5E",
  "QkFTSU4=",
  "UEVPUExF",
  "UFJFVFRZ",
  "V0lOVEVS",
  "RlJPWkU=",
  "T0ZGRVI=",
  "RVhJU1Q=",
  "SU5WSVRF",
  "QlJBU1M=",
  "TUFSQkxF",
  "SE9JU1Q=",
  "QVJUSVNU",
  "QlVJTEQ=",
  "R1JBSU4=",
  "VElNSU5H",
  "TkFJVkU=",
  "Q0xJTUI=",
  "QkFER0U=",
  "T0ZURU4=",
  "Qk9VTkNF",
  "QUxJS0U=",
  "QVJPVU5E",
  "RE9MTEFS",
  "U0xFRUs=",
  "VVNJTkc=",
  "RkFSTUVS",
];

const futureWordsEasy = [
  "VFJBWQ==",
  "VFJJTQ==",
  "UE9PTA==",
  "U0VFRA==",
  "Q09NRQ==",
  "RE9MTA==",
  "RkxBVw==",
  "UEFSVA==",
  "UElOUw==",
  "R1JJTg==",
  "TVVTVA==",
  "S0lURQ==",
  "QVVOVA==",
  "UExVRw==",
  "SEFORw==",
  "V0lORA==",
  "U1BJTg==",
  "SEFJUg==",
  "Q0hJTg==",
  "SElORA==",
  "TU9QUw==",
  "R0FWRQ==",
  "S0VZUw==",
  "Tk9URQ==",
  "T1BFTg==",
  "S0lORw==",
  "U1BPVA==",
  "U1RFUA==",
  "TE9BRg==",
  "V0VCUw==",
  "Q1VCUw==",
  "TElNUA==",
  "RkFSTQ==",
  "U09EQQ==",
  "U0xPVA==",
  "RkxFVw==",
  "U0VBTA==",
  "RkxPVw==",
  "RklWRQ==",
  "Qk9JTA==",
  "U0xJRA==",
  "U09VUA==",
  "Q1JJQg==",
  "QklSRA==",
  "U0VOVA==",
  "VEFMSw==",
  "WU9HQQ==",
  "RklTVA==",
  "SkFSUw==",
  "UklERQ==",
  "Qk9XTA==",
  "R0xBRA==",
  "TkVBVA==",
  "U1VSRg==",
  "QkFDSw==",
  "QVJNWQ==",
  "QkVBTg==",
  "TFVORw==",
  "RkFTVA==",
  "VFVCRQ==",
  "RElTSw==",
  "RElORQ==",
  "V0VBSw==",
  "U0VMRg==",
  "V0lTSA==",
  "TUVTUw==",
  "TEFNUA==",
  "U1RJUg==",
  "R09FUw==",
  "UE9UUw==",
  "TUFLRQ==",
  "U0VORA==",
  "Uk9BRA==",
  "REFURQ==",
  "Q0FSUw==",
  "TElNRQ==",
  "UFVTSA==",
  "VEFMRQ==",
  "QkVTVA==",
  "TElTVA==",
  "TkVYVA==",
  "TE9TVA==",
  "Q0FNUA==",
  "RE9PUg==",
  "UEFJTA==",
  "V09PTA==",
  "QlJBRw==",
  "UElDSw==",
  "Q1VCRQ==",
  "Q0FOUw==",
  "T05DRQ==",
  "REVOVA==",
  "VFVORQ==",
  "QkVBRA==",
  "TUlDRQ==",
  "SEFURQ==",
  "SE9NRQ==",
  "UEFSSw==",
  "VEVTVA==",
  "Qk9BVA==",
  "VFdJRw==",
  "V0FMTA==",
  "TkFQUw==",
  "S0VFUA==",
  "Q0FORQ==",
  "QkFCWQ==",
  "REVFUA==",
  "TEFXTg==",
  "TUlORQ==",
  "R0FURQ==",
  "RlJBWQ==",
  "UEFXUw==",
  "U0hPRQ==",
  "TElWRQ==",
  "U1RFVw==",
  "Q1VQUw==",
  "U1dBTg==",
  "SkFJTA==",
  "Rk9MRA==",
  "SEFMRg==",
  "REFNUA==",
  "TEFLRQ==",
  "RElSVA==",
  "RFJVTQ==",
  "TFVNUA==",
  "QkFMTA==",
  "UklDSA==",
  "Tk9ORQ==",
  "UEFUSA==",
  "Qk9MRA==",
  "SU5UTw==",
  "V0lORw==",
  "R0FNRQ==",
  "RlJPTQ==",
  "SElLRQ==",
  "UExVTQ==",
  "U1VDSA==",
  "VkFOUw==",
  "TUFUUw==",
  "U0FMRQ==",
  "UElFUw==",
  "UEVUUw==",
  "UkFHRQ==",
  "RkFORw==",
  "U05BUA==",
  "SE9STg==",
  "Q1JBTQ==",
  "TElORQ==",
  "R1JFVw==",
  "QkFSTg==",
  "TUFOWQ==",
  "TEFTVA==",
  "TUVBTA==",
  "Q1JBQg==",
  "QkFTSw==",
  "TElOSw==",
  "UkFHUw==",
  "VFJBUA==",
  "SEFORA==",
  "U0FZUw==",
  "QkVMTA==",
  "UkVBRA==",
  "SEVBVA==",
  "TU9SRQ==",
  "V0VTVA==",
  "V0FJVA==",
  "Q0FHRQ==",
  "TU9WRQ==",
  "UE9ORA==",
  "RFVNUA==",
  "TUFJRA==",
  "UkFORw==",
  "Rk9VUg==",
  "TkFJTA==",
  "TEFURQ==",
  "Qk9USA==",
  "RkFURQ==",
  "QkFSSw==",
  "Q1VSRQ==",
  "VEFDTw==",
  "R09ORQ==",
  "SlVTVA==",
  "SE9PSw==",
  "VEhFWQ==",
  "UklORw==",
  "TE9ORw==",
  "QkFJVA==",
  "SElOVA==",
  "R0VSTQ==",
  "SEVSTw==",
  "QkVBTQ==",
  "QkxVRQ==",
  "RElNRQ==",
  "UElORQ==",
  "UkFJTg==",
  "Q09XUw==",
  "T1ZFUg==",
  "SE9QRQ==",
  "RkFLRQ==",
  "QlVTWQ==",
  "UlVERQ==",
  "UEVBUg==",
  "WU9VUg==",
  "Q09PSw==",
  "VE9XTg==",
  "VE9MRA==",
  "U0FWRQ==",
  "R1JJVA==",
  "TElQUw==",
  "V09SSw==",
  "Q0xBWQ==",
  "TEVOVA==",
  "QlVTSA==",
  "Q0hPUA==",
  "VEVOVA==",
  "TUFURQ==",
  "RE9UUw==",
  "Sk9JTg==",
  "Q0FSVA==",
  "V0lOUw==",
  "QUdFUw==",
  "U1VSRQ==",
  "RVlFUw==",
  "UEFHRQ==",
  "R1VUUw==",
  "VEVBTQ==",
  "UkFNUw==",
  "VEFTSw==",
  "RlJPRw==",
  "U0xFRA==",
  "VEFQUw==",
  "UEFTVA==",
  "Uk9QRQ==",
  "UFVNUA==",
  "SFVHRQ==",
  "SE9MRQ==",
  "REFSVA==",
  "Sk9CUw==",
  "U0VBVA==",
  "R0lWRQ==",
  "UExPVA==",
  "VE9ZUw==",
  "Q1VSTA==",
  "S0lDSw==",
  "QkxPVw==",
  "U0xJUA==",
  "U0lERQ==",
  "V0FWRQ==",
  "UExBWQ==",
  "VEhJUw==",
  "UkFOSw==",
  "QkVORA==",
  "VEFMTA==",
  "REVFUg==",
  "REVBUg==",
  "Qk9PVA==",
  "V0VFSw==",
  "VEVMTA==",
  "U0hVVA==",
  "WkVSTw==",
  "Q0xBUA==",
  "S05PVw==",
  "TE9VRA==",
  "V0hFTg==",
  "V0hBVA==",
  "Rk9SVA==",
  "QkFUSA==",
  "U09DSw==",
  "UFVSRQ==",
  "VkVSWQ==",
  "QkVBUg==",
  "RUFTWQ==",
  "QkVEUw==",
  "U09BUA==",
  "Q0xBTQ==",
  "Q0hBVA==",
  "WUFNUw==",
  "Q09MRA==",
  "SEFSRQ==",
  "RklORA==",
  "SE9QUw==",
  "Q0FLRQ==",
  "RE9ORQ==",
  "QkVMVA==",
  "UlVHUw==",
  "V09MRg==",
  "Qk9PSw==",
  "UEVTVA==",
  "Q09STg==",
  "U0FJRA==",
  "Rk9SSw==",
  "TVVHUw==",
  "QlVNUA==",
  "TFVDSw==",
  "Uk9ERQ==",
  "R09BVA==",
  "RkFDRQ==",
  "R0xVRQ==",
  "SFVSVA==",
  "V0lERQ==",
  "Q09ORQ==",
  "REVTSw==",
  "UEFJTg==",
  "Uk9DSw==",
  "TUlOVA==",
  "RFJJUA==",
  "QkFORw==",
  "VEhFTQ==",
  "QkVOVA==",
  "R09MRg==",
  "UExVUw==",
  "RE9FUw==",
  "SElERQ==",
  "TUFSSw==",
  "UExBTg==",
  "Q0FSRQ==",
  "TE9DSw==",
  "Q0FTSA==",
  "U0FOSw==",
  "RkxPUA==",
  "UElOVA==",
  "U1RPVw==",
  "U0laRQ==",
  "Q09PTA==",
  "TUlORA==",
  "R0lSTA==",
  "TUlMSw==",
  "QkFSRQ==",
  "VE9FUw==",
  "Uk9MRQ==",
  "Q1JPVw==",
  "SEFSTQ==",
  "TUVBTg==",
  "SEVMUA==",
  "V0lSRQ==",
  "Qk9ORQ==",
  "QU5UUw==",
  "U0lORw==",
  "UElLRQ==",
  "Vk9URQ==",
  "V0lUSA==",
  "Uk9PTQ==",
  "RlJFRQ==",
  "QklLRQ==",
  "U05VRw==",
  "U0FJTA==",
  "TUVBVA==",
  "UEFWRQ==",
  "QkFORA==",
  "SEVBTA==",
  "U0VMTA==",
  "RFJPUA==",
  "RUFTVA==",
  "RklSRQ==",
  "TEVHUw==",
  "TUFERQ==",
  "VEFLRQ==",
  "QkFOSw==",
  "VEhFTg==",
  "U09NRQ==",
  "V0VOVA==",
  "T1dMUw==",
  "SEFSRA==",
  "TU9MRA==",
  "Q1JFVw==",
  "RklORQ==",
  "SkFXUw==",
  "SFVHUw==",
  "RkxBVA==",
  "SEVBRA==",
  "UkVTVA==",
  "VEFOSw==",
  "QkVBVA==",
  "VEFJTA==",
  "V0FTSA==",
  "U1BJVA==",
  "TEVBRg==",
  "U0hPVw==",
  "U09MRA==",
  "V0lHUw==",
  "Q0FTVA==",
  "REVBTA==",
  "V09STQ==",
  "VVBPTg==",
  "RkxBRw==",
  "Q0FNRQ==",
  "Q0xVQg==",
  "VkVTVA==",
  "Tk9TRQ==",
  "QkVFUA==",
  "QkxFVw==",
  "QlVHUw==",
  "VFVSTg==",
  "RUFDSA==",
  "RkVFRA==",
  "SlVNUA==",
  "SElMTA==",
  "QlVSTg==",
  "R1VTVA==",
  "SE9MRA==",
  "Q09JTA==",
  "TkFNRQ==",
  "U0lOSw==",
  "WUFSRA==",
  "Q0FTRQ==",
  "QlVOUw==",
  "UkFUUw==",
  "Q0xBVw==",
  "V0FOVA==",
  "Rk9PVA==",
  "Q09BVA==",
  "UEFDSw==",
  "S0FMRQ==",
  "QVdBWQ==",
  "RElTSA==",
  "TElLRQ==",
  "TElPTg==",
  "U09GVA==",
  "RFVTVA==",
  "U1RPUA==",
  "SEFWRQ==",
  "U1RBWQ==",
  "Rk9PRA==",
  "WUFSTg==",
  "RklTSA==",
  "R09MRA==",
  "UFJBWQ==",
  "VEVBUg==",
  "RUFSUw==",
  "UElHUw==",
  "TE9PSw==",
  "REFTSA==",
  "QVJNUw==",
  "U09GQQ==",
  "U09ORw==",
  "VVNFRA==",
  "U0FORA==",
  "TkVDSw==",
  "V0FMSw==",
  "RlVMTA==",
  "U0FNRQ==",
  "TVVDSA==",
  "RFJBVw==",
  "U0hPUA==",
  "RkxBUA==",
  "VkFTRQ==",
  "U0xBTQ==",
  "RklMTA==",
  "U0VBTQ==",
  "V09SRA==",
  "U0xPVw==",
  "UEFMRQ==",
  "U0FDSw==",
  "Wk9ORQ==",
  "UkVOVA==",
  "VFJJUA==",
  "RE9DSw==",
  "U0lDSw==",
  "RE9HUw==",
  "Q0FWRQ==",
  "UlVTVA==",
  "UkFURQ==",
  "VE9BRA==",
  "Qk9STg==",
  "T05MWQ==",
  "QkFLRQ==",
  "U0FMVA==",
  "U0hJUA==",
  "TkVUUw==",
  "RFVDSw==",
];

const futureWordsMedium = [
  "Uk9CT1Q=",
  "U01JTEU=",
  "SE9URUw=",
  "RkxBS0U=",
  "Q0xJQ0s=",
  "VE9XRVI=",
  "U09VTkQ=",
  "Q1JPU1M=",
  "RFJVTVM=",
  "RkxPQ0s=",
  "QkVHSU4=",
  "Q0hJQ0s=",
  "U0hPUlQ=",
  "TU9VU0U=",
  "Q1VSTFM=",
  "RlJJRUQ=",
  "VE9SQ0g=",
  "TUFZQkU=",
  "U1RSQVc=",
  "RkVOQ0U=",
  "TElORU4=",
  "Q0xFQVI=",
  "Uk9VTkQ=",
  "RkFVTFQ=",
  "RkxFU0g=",
  "U0hBS0U=",
  "T0xERVI=",
  "UVVJQ0s=",
  "U0xJQ0s=",
  "Tk9URVM=",
  "U1dJRlQ=",
  "Vk9JQ0U=",
  "QUxPTkc=",
  "SkVBTlM=",
  "QlJFQUQ=",
  "Q1JJRUQ=",
  "U0NFTkU=",
  "Q1JVU0g=",
  "VEhFUkU=",
  "TUVUQUw=",
  "QUxPVUQ=",
  "V0FUQ0g=",
  "QVJJU0U=",
  "Rk9HR1k=",
  "R1VBUkQ=",
  "U1RBSU4=",
  "U1RBR0U=",
  "V0VJUkQ=",
  "UElMT1Q=",
  "U1RVTVA=",
  "Rk9SVEg=",
  "Q0FNRUw=",
  "UExBTkU=",
  "U1BPT04=",
  "Q0hPS0U=",
  "R1JPV0w=",
  "QVdBS0U=",
  "V09NRU4=",
  "U0hPQ0s=",
  "U0hBTEw=",
  "Q0hBSVI=",
  "Q09VTlQ=",
  "U1RVTkc=",
  "Q1JBV0w=",
  "TUVEQUw=",
  "U0VSVkU=",
  "V09SUlk=",
  "TEVNT04=",
  "UEhPTkU=",
  "SE9CQlk=",
  "UlVMRVI=",
  "R0xBU1M=",
  "UVVFRU4=",
  "UkFJU0U=",
  "UEFJTlQ=",
  "VElHRVI=",
  "UExBVEU=",
  "SU1BR0U=",
  "V0hJTEU=",
  "R1VJREU=",
  "U0hPT0s=",
  "QlVJTEQ=",
  "Q1JBU0g=",
  "Vk9DQUw=",
  "Q0hVVEU=",
  "Q0hJTEQ=",
  "U0tVTks=",
  "VEVBQ0g=",
  "U1RJTEw=",
  "QkxPQ0s=",
  "TUlOVVM=",
  "TU9ORVk=",
  "Q0hJTEk=",
  "QU5HUlk=",
  "Q1JFQU0=",
  "TVVTSUM=",
  "U1BFQUs=",
  "U0NSQVA=",
  "Q0hPUkU=",
  "RU5KT1k=",
  "U1RBVEU=",
  "U05BQ0s=",
  "VEhBTks=",
  "Q0hBSU4=",
  "U01BUlQ=",
  "TklOSkE=",
  "RlJPWkU=",
  "QkxBTUU=",
  "U0hFTEw=",
  "U1RBTVA=",
  "Q0hFU1M=",
  "TEVWRUw=",
  "RFJPVkU=",
  "QkxFU1M=",
  "Q0xPV04=",
  "WU9VTkc=",
  "R1VFU1Q=",
  "R0VFU0U=",
  "RlJBTUU=",
  "RklGVEg=",
  "U05PUkU=",
  "QkxFTkQ=",
  "Q1JFUFQ=",
  "QlJBU1M=",
  "S05BQ0s=",
  "QURPUFQ=",
  "T0ZURU4=",
  "TU9VVEg=",
  "QkFOSk8=",
  "U0NSRVc=",
  "VEhVTUI=",
  "VklERU8=",
  "QkFER0U=",
  "UFJJWkU=",
  "TUFHSUM=",
  "RVFVQUw=",
  "U01BTEw=",
  "R0lGVFM=",
  "R1VJTEQ=",
  "U01FTEw=",
  "Rk9VTkQ=",
  "RFJBTks=",
  "R0xPU1M=",
  "Uk9BU1Q=",
  "UEVBQ0U=",
  "RkxPVVI=",
  "UElOQ0g=",
  "UElBTk8=",
  "TUVURVI=",
  "U0hPUkU=",
  "QkxBQ0s=",
  "QkVBU1Q=",
  "U1RPT0w=",
  "Q0xBU0g=",
  "VU5USUw=",
  "QkVOQ0g=",
  "R0xPQkU=",
  "QlVSU1Q=",
  "VEhJUkQ=",
  "R0lBTlQ=",
  "Q1JBVEU=",
  "V0VBVkU=",
  "VEFCTEU=",
  "U1RFQU0=",
  "TUlHSFQ=",
  "QkFSTlM=",
  "UEFSVFk=",
  "U1dJTkc=",
  "U09VVEg=",
  "U0hFRVA=",
  "SFVSUlk=",
  "QlJJQ0s=",
  "TElPTlM=",
  "V1JPTkc=",
  "SE9JU1Q=",
  "RklFTEQ=",
  "U1RJQ0s=",
  "QklSVEg=",
  "Tk9SVEg=",
  "U0FMQUQ=",
  "SE9VU0U=",
  "QkFTSU4=",
  "V1JJVEU=",
  "U1RFRVA=",
  "QlJPV04=",
  "U1RVRFk=",
  "U1VTSEk=",
  "RFdFTEw=",
  "V0hFRUw=",
  "T1RIRVI=",
  "U1dFQVQ=",
  "RkxVTkc=",
  "SEVBUkQ=",
  "R1JJTlM=",
  "U0hJUlQ=",
  "VEFVTlQ=",
  "UElUQ0g=",
  "SE9ORVk=",
  "V0hJQ0g=",
  "R1JPVkU=",
  "VU5ERVI=",
  "QkxJTks=",
  "U0hJTlk=",
  "UkFESU8=",
  "RklSRUQ=",
  "UEFOREE=",
  "R1JFRVQ=",
  "QVdBUkU=",
  "SlVJQ0U=",
  "Q1VSTFk=",
  "RU1QVFk=",
  "VE9JTFM=",
  "VFJJRUQ=",
  "QVdGVUw=",
  "Q1JBTkU=",
  "RkFDRVM=",
  "U1BBUks=",
  "Uk9ZQUw=",
  "RUFSTFk=",
  "QUxFUlQ=",
  "V0hBTEU=",
  "U09MVkU=",
  "WkVCUkE=",
  "VFJJQ0s=",
  "Q0xPVEg=",
  "VFJBREU=",
  "RElSVFk=",
  "TFVOQ0g=",
  "VEFTVEU=",
  "U1RBQ0s=",
  "QUxBUk0=",
  "U1dJTVM=",
  "U1RPTEU=",
  "VEhFSVI=",
  "RlJPTlQ=",
  "REFOQ0U=",
  "T0ZGRVI=",
  "TU9OVEg=",
  "RkVBU1Q=",
  "VFJBQ0U=",
  "V0lEVEg=",
  "QlJBVkU=",
  "VElEQUw=",
  "UkVBQ0g=",
  "RklHSFQ=",
  "VElHSFQ=",
  "U1lSVVA=",
  "VElSRUQ=",
  "Qk9BU1Q=",
  "QkFTSUM=",
  "QkFLRVI=",
  "V09NQU4=",
  "U0xFRUs=",
  "R0xPVkU=",
  "V1JJTkc=",
  "U0NPUkU=",
  "U0lHSFQ=",
  "R0xPUlk=",
  "R1JFRU4=",
  "U0VWRU4=",
  "TEVER0U=",
  "TEVBU1Q=",
  "RkFJUlk=",
  "QlJVU0g=",
  "VEhST1c=",
  "R1JPV1M=",
  "U1RBRkY=",
  "RVhJU1Q=",
  "Q0FSUlk=",
  "VEhST0I=",
  "VE9BU1Q=",
  "QkxBTks=",
  "VE9PVEg=",
  "R1JBTkQ=",
  "UklHSFQ=",
  "RUxCT1c=",
  "TUFUQ0g=",
  "R1JJTkQ=",
  "R1JBREU=",
  "VFJBSUw=",
  "QlJBSU4=",
  "QlJJREU=",
  "V09SRFM=",
  "RFJFQU0=",
  "Q0FCTEU=",
  "TEFVR0g=",
  "Q1JPV0Q=",
  "RlJVSVQ=",
  "QlJPT00=",
  "RFJFU1M=",
  "UE9XRVI=",
  "T1dORVI=",
  "Q1lDTEU=",
  "U0tBVEU=",
  "RkxBU0g=",
  "VE9BRFM=",
  "RklOQ0g=",
  "QkxJTVA=",
  "U0xFRVQ=",
  "UE9SQ0g=",
  "RFJJVkU=",
  "Q0FOQUw=",
  "UkVBRFk=",
  "UE9VTkQ=",
  "U0hBUkU=",
  "Q0hBU0U=",
  "REFJTFk=",
  "Q0xPU0U=",
  "VE9UQUw=",
  "QU5HRVI=",
  "RVZFUlk=",
  "QVJPU0U=",
  "Q0FNUFM=",
  "VFJBSU4=",
  "UE9JTlQ=",
  "QUZURVI=",
  "TUVMT04=",
  "V0lORFk=",
  "UkVQTFk=",
  "T0xJVkU=",
  "SVNTVUU=",
  "U0tJTEw=",
  "VEhJTks=",
  "VFJVVEg=",
  "V0hPTEU=",
  "QUJPVVQ=",
  "QkVHQU4=",
  "RlJPU1Q=",
  "U1RVQ0s=",
  "VEhFU0U=",
  "U1RPTkU=",
  "QUxJS0U=",
  "U0xJQ0U=",
  "R09JTkc=",
  "U0NBTEU=",
  "SE9STlM=",
  "QkVBTlM=",
  "U1BFRUQ=",
  "QlVJTFQ=",
  "V0hJVEU=",
  "SEVBVlk=",
  "TEVBVkU=",
  "SlVER0U=",
  "TE9ZQUw=",
  "U0xFUFQ=",
  "Q0hBTEs=",
  "VEVBUlM=",
  "U0xJREU=",
  "UElFQ0U=",
  "U0NFTlQ=",
  "UEFTVEE=",
  "U1RPUk0=",
  "VFJVQ0s=",
  "U0xBTlQ=",
  "S09BTEE=",
  "QkxBWkU=",
  "TU9UT1I=",
  "U0hBUks=",
  "Q0hFU1Q=",
  "R1JBSU4=",
  "QlJJTkc=",
  "QU1PTkc=",
  "Q09BQ0g=",
  "VFdJU1Q=",
  "SEFORFM=",
  "U01PS0U=",
  "RVhFUlQ=",
  "V09VTEQ=",
  "VVBTRVQ=",
  "TEFSR0U=",
  "UFJJQ0U=",
  "U0hPRVM=",
  "UEFUQ0g=",
  "U1RPUkU=",
  "U1BFTkQ=",
  "U1RSQVk=",
  "UkFOR0U=",
  "V0hPU0U=",
  "QVZPSUQ=",
  "QUNUT1I=",
  "RFJJTks=",
  "TE9DQUw=",
  "VE9VQ0g=",
  "R1JPVVA=",
  "QVBBUlQ=",
  "RlJPV04=",
  "V1JJU1Q=",
  "VU5DTEU=",
  "UElaWkE=",
  "U0hBUlA=",
  "Uk9VVEU=",
  "VE9VR0g=",
  "QkxBU1Q=",
  "Q0xJTUI=",
  "VEhVTVA=",
  "UEFSS1M=",
  "UFJJTlQ=",
  "TEFURVI=",
  "QUdBSU4=",
  "QUJPVkU=",
  "RUFHRVI=",
  "Q09NRVQ=",
  "Tk9JU0U=",
  "VFJVU1Q=",
  "R09PU0U=",
  "V0hFUkU=",
  "Q09WRVQ=",
  "RE9aRU4=",
  "QlJBTkQ=",
  "VkVOT00=",
  "UVVJTFQ=",
  "RkxVVEU=",
  "UklWRVI=",
  "Qk9BUkQ=",
  "VEhJTkc=",
  "QVdBUkQ=",
  "U1VHQVI=",
  "U1RPVkU=",
  "RklSU1Q=",
  "Q0xBU1M=",
  "Q09BU1Q=",
  "R1JBUEU=",
  "TkVWRVI=",
  "QlVZRVI=",
  "VkFMVUU=",
  "U0xFRVA=",
  "V0FURVI=",
  "TUFZT1I=",
  "QkVSUlk=",
  "UFJJREU=",
  "TUFOR08=",
  "QlVOQ0g=",
  "R1JJTEw=",
  "UFJJTUU=",
  "TFVDS1k=",
  "UExBTlQ=",
  "QUxPTkU=",
  "TkFJVkU=",
  "QUdSRUU=",
  "Q0xPVUQ=",
  "VE9EQVk=",
  "QkVJTkc=",
  "UEVBQ0g=",
  "T1JERVI=",
  "R1JBU1M=",
  "U1BFTlQ=",
  "U1RBUlQ=",
  "Uk9VR0g=",
  "Q09VUlQ=",
  "VVNJTkc=",
  "RVhUUkE=",
  "Q1JBTks=",
  "U1dJUkw=",
  "Tk9JU1k=",
  "U1BPS0U=",
  "Q09VR0g=",
  "VU5USUU=",
  "R1JBVlk=",
  "U09SUlk=",
  "Q1JPV04=",
  "QUhFQUQ=",
  "U0hBVkU=",
  "R09BVFM=",
  "Q09VTEQ=",
  "VEhPU0U=",
  "R1VFU1M=",
  "U0hFRVQ=",
  "VEhJQ0s=",
  "RkxFRVQ=",
  "RVhDRUw=",
  "UEFOVFM=",
  "U05BSUw=",
  "TU9WSUU=",
  "TFVOR1M=",
  "RUlHSFQ=",
  "VFJJQkU=",
  "UkFOQ0g=",
  "QVJHVUU=",
  "QkVBQ0g=",
  "Q0hPU0U=",
  "TUFQTEU=",
];

const futureWordsHard = [
  "Q09VUlNF",
  "RUFTSUxZ",
  "T0JKRUNU",
  "Q09NTU9O",
  "UklESU5H",
  "U1VSVkVZ",
  "VEhSSUxM",
  "TkVBUkJZ",
  "RkVNQUxF",
  "VFdFTFZF",
  "TEFXWUVS",
  "UFJJTkNF",
  "Q09GRkVF",
  "U0NIT09M",
  "R0VOREVS",
  "UkVNT1ZF",
  "UEhSQVNF",
  "T0ZGSUNF",
  "Q0xPU0VE",
  "U1BPS0VO",
  "T1lTVEVS",
  "Q0hVUkNI",
  "UEVSU09O",
  "TVVTRVVN",
  "R0VOSVVT",
  "R0FSTElD",
  "U0NSRUVO",
  "U0VDUkVU",
  "V09OREVS",
  "RUFUSU5H",
  "TU9ERVJO",
  "RU5HSU5F",
  "REVQRU5E",
  "QlVUVE9O",
  "RkFCUklD",
  "RVhDRVBU",
  "S0lUVEVO",
  "RkFNT1VT",
  "U1BSRUFE",
  "QU5TV0VS",
  "VU5JVEVE",
  "U1FVQVJF",
  "TU9USU9O",
  "UFJJU09O",
  "SlVOSU9S",
  "Qk9SUk9X",
  "UkFUSU5H",
  "Rk9STUVS",
  "U0hPUlRT",
  "TU9WSU5H",
  "U1RBQkxF",
  "UkVDRVNT",
  "TEFVTkNI",
  "UklTSU5H",
  "Rk9STUFU",
  "UkFORE9N",
  "RVhQQU5E",
  "U0VSVkVS",
  "VkFMTEVZ",
  "U0FWSU5H",
  "V0lOTkVS",
  "TklHSFRT",
  "RElSRUNU",
  "TUlOSU5H",
  "Tk9CT0RZ",
  "TElRVUlE",
  "UFVTSEVT",
  "VU5BQkxF",
  "QkVZT05E",
  "Qk9UVE9N",
  "Q1JFQVRF",
  "Q0hBTkNF",
  "QVVUSE9S",
  "V0VJR0hU",
  "U1BJUklU",
  "SU5WRVNU",
  "U0FGRVRZ",
  "TElWSU5H",
  "VU5MRVNT",
  "Q0FTVExF",
  "RlVUVVJF",
  "R1JPV1RI",
  "Q0lSQ1VT",
  "RkxZSU5H",
  "UklCQk9O",
  "SEVBTFRI",
  "TEVOR1RI",
  "TUFSS0VU",
  "VU5MT0FE",
  "U0FZSU5H",
  "QUxNT1NU",
  "TUVNT1JZ",
  "RVhURU5E",
  "UkVXQVJE",
  "Q09WRVJT",
  "TE9TSU5H",
  "UkVTQ1VF",
  "RFJJVkVS",
  "V0laQVJE",
  "Uk9DS0VU",
  "SElEREVO",
  "VEhJUlRZ",
  "RFVSSU5H",
  "RU5ESU5H",
  "Tk9STUFM",
  "U0VOSU9S",
  "R0FSREVO",
  "Qk9UVExF",
  "RVhQRUNU",
  "SkVSU0VZ",
  "UkVBTExZ",
  "TUVESVVN",
  "VEVBUE9U",
  "RVNDQVBF",
  "TUlOVVRF",
  "UkVHSU9O",
  "TUFSSU5F",
  "RU5TVVJF",
  "U1RVRElP",
  "R0xPQkFM",
  "QUxXQVlT",
  "VVBEQVRF",
  "TkFSUk9X",
  "UE9MSUNF",
  "Q1VTVE9N",
  "Q09STkVS",
  "R09MREVO",
  "QlVSR0VS",
  "RU5USVJF",
  "UkVMQVRF",
  "UElDS0VE",
  "U0VMRUNU",
  "REVWSUNF",
  "QlJPS0VO",
  "TUFLSU5H",
  "UkVBREVS",
  "TU9NRU5U",
  "U1dJVENI",
  "U0hBRE9X",
  "UExBWUVS",
  "VFJZSU5H",
  "RVhQRVJU",
  "Vk9ZQUdF",
  "Q0FSUk9U",
  "TEVUVEVS",
  "REVUQUlM",
  "REVURUNU",
  "T1BUSU9O",
  "VEFMRU5U",
  "UkVTVUxU",
  "TUVNQkVS",
  "UkVDRU5U",
  "RklOSVNI",
  "VFJBVkVM",
  "Qk9SREVS",
  "VklTSU9O",
  "RU5FUkdZ",
  "REVTRVJU",
  "TElTVEVO",
  "RklHVVJF",
  "VFdFTlRZ",
  "UkVQTEFZ",
  "UklERExF",
  "UkVWSUVX",
  "SU5URU5E",
  "Q0hFRVNF",
  "U01PT1RI",
  "Vk9MVU1F",
  "RkFDSU5H",
  "Rk9SR0VU",
  "UEFMQUNF",
  "QlJBTkNI",
  "REFOR0VS",
  "TUFUVEVS",
  "UExFTlRZ",
  "U0FNUExF",
  "UkVNT1RF",
  "VEFLSU5H",
  "TEVBREVS",
  "TEFURVNU",
  "Q0hPSUNF",
  "V1JFTkNI",
  "Tk9USUNF",
  "TUFTVEVS",
  "UEVSSU9E",
  "U0lMRU5U",
  "UFJFRkVS",
  "VE9NQVRP",
  "R1JPVU5E",
  "Q1JFRElU",
  "UkVQRUFU",
  "VEhBTktT",
  "TU9CSUxF",
  "TEVTU09O",
  "V0lUSElO",
  "TElHSFRT",
  "Q0hBTkdF",
  "UEVCQkxF",
  "Q0FORExF",
  "UkVTT1JU",
  "UFVCTElD",
  "REVGRU5E",
  "TUlSUk9S",
  "VU5MSUtF",
  "SU5KVVJZ",
  "VEVOTklT",
  "RkFJTEVE",
  "VEVNUEVS",
  "UkVNQUlO",
  "SE9ORVNU",
  "TlVNQkVS",
  "U0hSSU1Q",
  "VklSVFVF",
  "VFVSS0VZ",
  "VEhSSUZU",
  "QkVDT01F",
  "VklPTElO",
  "REVGSU5F",
  "QU1PVU5U",
  "UkVBU09O",
  "U1RSSUtF",
  "Q09NSU5H",
  "R1VJVEFS",
  "VEFVR0hU",
  "R0VOVExF",
  "U0hJRUxE",
  "QVJUSVNU",
  "RkFSTUVS",
  "VElQUEVE",
  "Rk9MTE9X",
  "U1BPTkdF",
  "Q0hPT1NF",
  "SE9MTE9X",
  "TU9OS0VZ",
  "Qk9VTkNF",
  "UElMTE9X",
  "TElUVExF",
  "U1RBVFVF",
  "UkVDT1JE",
  "QkFOS0VS",
  "QkVGT1JF",
  "SE9QSU5H",
  "UE9SVEVS",
  "SU5DT01F",
  "R0FUSEVS",
  "VFJJUExF",
  "QlVDS0VU",
  "SEVJR0hU",
  "TU9USEVS",
  "TUFHTkVU",
  "QlVTSEVT",
  "VFJPUEhZ",
  "RUxFVkVO",
  "TkFUSU9O",
  "TElaQVJE",
  "VElDS0VU",
  "UE9DS0VU",
  "U0VBUkNI",
  "QlVCQkxF",
  "QlJJR0hU",
  "VEhST05F",
  "SU5TSVNU",
  "Q0FDVFVT",
  "SVRTRUxG",
  "RklOR0VS",
  "SU5WRU5U",
  "UElDS0xF",
  "UEVOQ0lM",
  "VEhJUlNU",
  "UkVUVVJO",
  "RlJJRU5E",
  "U1BFRUNI",
  "VEVBQ1VQ",
  "Q0hFUlJZ",
  "TUFOQUdF",
  "RU5PVUdI",
  "WklQUEVE",
  "VVNFRlVM",
  "RVhDVVNF",
  "QkVUVEVS",
  "Q09VUExF",
  "SlVHR0xF",
  "VklTVUFM",
  "U09VR0hU",
  "Qk9VR0hU",
  "U0NBUkNF",
  "U0hPVUxE",
  "U1RSQUlO",
  "TkFUVVJF",
  "U1RSRUFN",
  "UkVNSU5E",
  "U0xFRVZF",
  "UEFSRU5U",
  "U1BFRURZ",
  "UExFQVNF",
  "U0lTVEVS",
  "UFVaWkxF",
  "U0lNUExF",
  "UkVQT1JU",
  "U0xJR0hU",
  "QlJJREdF",
  "VEhST0FU",
  "RElOTkVS",
  "RE9DVE9S",
  "QlJFQVRI",
  "RkxJR0hU",
  "U0NSRUFN",
  "UFVSUExF",
  "U1RSRUVU",
  "REVDSURF",
  "SUdOT1JF",
  "SU5WSVRF",
  "SEFNTUVS",
  "U1FVSVJU",
  "QURWSUNF",
  "Q0VOVEVS",
  "U0NSQVBF",
  "Q0VMTEFS",
  "U1RSSU5H",
  "TUlERExF",
  "QUNUSU9O",
  "VEFSR0VU",
  "U0hPV0VS",
  "TEVBUk5T",
  "RE9MTEFS",
  "SU5TSURF",
  "QlVUVEVS",
  "TVlTRUxG",
  "UkVNQVJL",
  "VEhST1dO",
  "TFVNQkVS",
  "RkFNSUxZ",
  "Q09MTEFS",
  "U1RPTEVO",
  "UkVQQUlS",
  "SVNMQU5E",
  "V09SS0VS",
  "VU5LSU5E",
  "RU1QTE9Z",
  "UFJFVFRZ",
  "UExJR0hU",
  "VFVSVExF",
  "Q1JBWU9O",
  "U0lMVkVS",
  "U1RST05H",
  "Q0VMRVJZ",
  "VU5GQUlS",
  "RkFUSEVS",
  "QVJPVU5E",
  "VElNSU5H",
  "REFNQUdF",
  "SEFQUEVO",
  "Q09VU0lO",
  "RE9OS0VZ",
  "QkVFVExF",
  "QVZFTlVF",
  "Q09CV0VC",
  "V0FOREVS",
  "VU5MT0NL",
  "U0VDT05E",
  "RE9VQkxF",
  "U0FOREFM",
  "TU9QUEVE",
  "V0lORE9X",
  "V1JJVEVS",
  "TUFSQkxF",
  "UEVPUExF",
  "RlJFRVpF",
  "Q0FNRVJB",
  "UEVQUEVS",
  "Q09PS0lF",
  "QkFUVExF",
  "UFJBSVNF",
  "VEhSRUFE",
  "U0VBU09O",
  "QU5JTUFM",
  "QVdISUxF",
  "UE9UQVRP",
  "V0VBTFRI",
  "QkVBVkVS",
  "Q0hBUkdF",
  "Q0xPVkVS",
];

const historicalWords = {
  easy: historicalWordsEasy.map(atob),
  medium: historicalWordsMedium.map(atob),
  hard: historicalWordsHard.map(atob),
};

const futureWords = {
  easy: futureWordsEasy.map(atob),
  medium: futureWordsMedium.map(atob),
  hard: futureWordsHard.map(atob),
};

const words = {
  easy: historicalWordsEasy.concat(futureWordsEasy).map(atob),
  medium: historicalWordsMedium.concat(futureWordsMedium).map(atob),
  hard: historicalWordsHard.concat(futureWordsHard).map(atob),
};

const start = new Date(2022, 2 - 1, 10);

const MILLIS_PER_DAY = 1000 * 60 * 60 * 24;

/**
 * @param {Date} first
 * @param {Date} second
 * @returns int
 */
function daysBetween(first, second) {
  return Math.floor((second.getTime() - first.getTime()) / MILLIS_PER_DAY);
}

/**
 * @param {Date} date
 * @returns int
 */
function getPuzzleIdForDate(date) {
  return daysBetween(start, date);
}

/**
 * @param {Date} date
 * @returns {import("../types").DailyPuzzles}
 */
function getPuzzlesForDate(date) {
  return {
    easy: getPuzzleForDateAndDifficulty(date, "easy"),
    medium: getPuzzleForDateAndDifficulty(date, "medium"),
    hard: getPuzzleForDateAndDifficulty(date, "hard"),
  };
}

/**
 * @param {Date} date
 * @param {string} difficulty
 * @returns string
 */
function getPuzzleForDateAndDifficulty(date, difficulty) {
  const index = getPuzzleIdForDate(date);
  const historicalWordList = historicalWords[difficulty];
  const futureWordList = futureWords[difficulty];

  if (index >= 0 && index < historicalWordList.length) {
    return historicalWordList[index];
  }

  const holidayPuzzle = getHolidayPuzzle(date, difficulty);
  if (holidayPuzzle) {
    return holidayPuzzle;
  }

  const futureIndex = Math.abs(
    (index - historicalWordList.length) % futureWordList.length
  );
  return futureWordList[futureIndex];
}

/**
 * @param {Date} date
 * @returns {import("../types").HolidayPuzzles | undefined}
 */
function getHolidayPuzzlePossibilities(date) {
  if (date.getMonth() === 1 - 1 && date.getDate() === 1) {
    return {
      name: "New Year's",
      easy: ["WUVBUg==", "VElNRQ=="].map(atob),
      medium: ["Q0xPQ0s=", "SEFQUFk="].map(atob),
      hard: ["QU5OVUFM", "Q0hFRVJT"].map(atob),
    };
  }
  if (date.getMonth() === 2 - 1 && date.getDate() === 14) {
    return {
      name: "Valentine's",
      easy: ["S0lTUw==", "Uk9TRQ==", "TE9WRQ==", "UElOSw=="].map(atob),
      medium: ["QVJST1c=", "SEVBUlQ=", "Q0FORFk=", "U1dFRVQ="].map(atob),
      hard: ["UE9FVFJZ", "RkxPV0VS"].map(atob),
    };
  }
  if (date.getMonth() === 3 - 1 && date.getDate() === 14) {
    return {
      name: "Pi Day",
      easy: ["TUFUSA==", "QVJFQQ=="].map(atob),
      medium: ["U0hBUEU=", "VEhSRUU="].map(atob),
      hard: ["Q0lSQ0xF", "UkFESVVT"].map(atob),
    };
  }
  if (date.getMonth() === 3 - 1 && date.getDate() === 20) {
    return {
      name: "Spring Equinox",
      easy: ["TkVTVA==", "R1JPVw=="].map(atob),
      medium: ["SEFUQ0g=", "RlJFU0g=", "Uk9CSU4="].map(atob),
      hard: ["U1BSSU5H", "U1BST1VU"].map(atob),
    };
  }
  if (date.getMonth() === 4 - 1 && date.getDate() === 1) {
    return {
      name: "April Fool's",
      easy: ["Sk9LRQ==", "Rk9PTA=="].map(atob),
      medium: ["QVBSSUw=", "U0lMTFk=", "QU5OT1k=", "Sk9LRVI="].map(atob),
      hard: ["QkFOQU5B", "TUFNTUFM", "Q09DT09O", "VFJJQ0tZ"].map(atob),
    };
  }
  if (date.getMonth() === 4 - 1 && date.getDate() === 22) {
    return {
      name: "Earth",
      easy: ["VFJFRQ==", "TEFORA=="].map(atob),
      medium: ["RUFSVEg=", "UkVVU0U=", "Q0xFQU4=", "T0NFQU4="].map(atob),
      hard: ["UExBTkVU", "UkVEVUNF", "Rk9SRVNU"].map(atob),
    };
  }
  if (date.getMonth() === 5 - 1 && date.getDate() === 4) {
    return {
      name: "May the Fourth",
      easy: ["U1RBUg==", "U09MTw=="].map(atob),
      medium: ["Rk9SQ0U=", "UkVCRUw=", "U1BBQ0U="].map(atob),
      hard: ["Rk9VUlRI", "RU1QSVJF"].map(atob),
    };
  }
  // Sometime June 20
  if (date.getMonth() === 6 - 1 && date.getDate() === 21) {
    return {
      name: "Summer Solstice",
      easy: ["V0FSTQ==", "U1dJTQ=="].map(atob),
      medium: ["TElHSFQ=", "U1VOTlk="].map(atob),
      hard: ["U1VNTUVS", "WUVMTE9X"].map(atob),
    };
  }
  // Sometimes September 22
  if (date.getMonth() === 9 - 1 && date.getDate() === 23) {
    return {
      name: "Autumn Equinox",
      easy: ["UkFLRQ==", "RkFMTA=="].map(atob),
      medium: ["QVBQTEU=", "QUNPUk4="].map(atob),
      hard: ["QVVUVU1O", "TEVBVkVT", "T1JBTkdF"].map(atob),
    };
  }
  if (date.getMonth() === 10 - 1 && date.getDate() === 31) {
    return {
      name: "Halloween",
      easy: ["QkFUUw==", "TUFTSw==", "Q0FUUw=="].map(atob),
      medium: ["R0hPU1Q=", "VFJFQVQ=", "U0NBUlk=", "V0lUQ0g="].map(atob),
      hard: ["R09CTElO", "U1BPT0tZ", "U1BJREVS"].map(atob),
    };
  }
  // Sometimes December 22
  if (date.getMonth() === 12 - 1 && date.getDate() === 21) {
    return {
      name: "Winter Solstice",
      easy: ["REFSSw==", "U05PVw=="].map(atob),
      medium: ["TklHSFQ=", "U0NBUkY="].map(atob),
      hard: ["V0lOVEVS", "RlJPWkVO"].map(atob),
    };
  }
  if (date.getMonth() === 12 - 1 && date.getDate() === 25) {
    return {
      name: "Christmas",
      easy: ["R0lGVA==", "Q0FSRA=="].map(atob),
      medium: ["QkVMTFM=", "RUxWRVM="].map(atob),
      hard: ["RlJPU1RZ", "U0xFSUdI"].map(atob),
    };
  }

  if (
    date.getFullYear() === 2023 &&
    date.getMonth() === 1 - 1 &&
    date.getDate() === 22
  ) {
    return {
      name: "Lunar New Year",
      easy: ["S0lORA=="].map(atob),
      medium: ["UVVJRVQ="].map(atob),
      hard: ["UkFCQklU"].map(atob),
    };
  }
  if (
    date.getFullYear() === 2024 &&
    date.getMonth() === 2 - 1 &&
    date.getDate() === 10
  ) {
    return {
      name: "Lunar New Year",
      easy: ["TU9PTg=="].map(atob),
      medium: ["TFVOQVI="].map(atob),
      hard: ["RFJBR09O"].map(atob),
    };
  }
  if (
    date.getFullYear() === 2025 &&
    date.getMonth() === 1 - 1 &&
    date.getDate() === 29
  ) {
    return {
      name: "Lunar New Year",
      easy: ["V0lTRQ=="].map(atob),
      medium: ["U05BS0U="].map(atob),
      hard: ["Wk9ESUFD"].map(atob),
    };
  }
  if (
    date.getFullYear() === 2026 &&
    date.getMonth() === 2 - 1 &&
    date.getDate() === 17
  ) {
    return {
      name: "Lunar New Year",
      easy: ["TU9PTg=="].map(atob),
      medium: ["SE9SU0U="].map(atob),
      hard: ["QUNUSVZF"].map(atob),
    };
  }
  if (
    (date.getFullYear() === 2023 &&
      date.getMonth() === 4 - 1 &&
      date.getDate() === 9) ||
    (date.getFullYear() === 2024 &&
      date.getMonth() === 4 - 1 &&
      date.getDate() === 9) ||
    (date.getFullYear() === 2025 &&
      date.getMonth() === 4 - 1 &&
      date.getDate() === 9) ||
    (date.getFullYear() === 2026 &&
      date.getMonth() === 4 - 1 &&
      date.getDate() === 9)
  ) {
    return {
      name: "Easter",
      easy: ["RUdHUw==", "SFVOVA=="].map(atob),
      medium: ["VFVMSVA=", "QlVOTlk="].map(atob),
      hard: ["QkFTS0VU", "UEFTVEVM"].map(atob),
    };
  }

  return undefined;
}

/**
 * @param {Date} date
 * @param {string} difficulty
 * @return {string | undefined}
 */
function getHolidayPuzzle(date, difficulty) {
  const holidayPossibilities = getHolidayPuzzlePossibilities(date);
  if (holidayPossibilities && holidayPossibilities[difficulty].length > 0) {
    const index = date.getFullYear() % holidayPossibilities[difficulty].length;
    return holidayPossibilities[difficulty][index];
  }
  return undefined;
}

/**
 * @returns int
 */
function getTodayPuzzleId() {
  return getPuzzleIdForDate(new Date());
}

/**
 * @returns {import("../types").DailyPuzzles}
 */
function getTodayPuzzles() {
  return getPuzzlesForDate(new Date());
}

/**
 * @param {string} target
 * @param {string} guess
 * @returns {import("../types").GuessState[]}
 */
function compareTargetAndGuess(target, guess) {
  const targetUpper = target.toUpperCase();
  const guessUpper = guess.toUpperCase();
  const { length } = targetUpper;
  /** @type {import("../types").GuessState[]} */
  const result = Array(length);
  const letterUsed = Array(length).fill(false);

  // 1st pass - matches
  for (let i = 0; i < length; i++) {
    if (targetUpper[i] === guessUpper[i]) {
      result[i] = "match";
      letterUsed[i] = true;
    }
  }

  // 2nd pass - miss and present positions
  for (let i = 0; i < targetUpper.length; i++) {
    if (result[i] !== "match") {
      const otherLetters = targetUpper.split("").map((letter, j) => {
        if (i === j || letterUsed[j]) {
          return "";
        }
        return letter;
      });
      const targetIndex = otherLetters.indexOf(guessUpper[i]);
      if (targetIndex >= 0) {
        result[i] = "present";
        letterUsed[targetIndex] = true;
      } else {
        result[i] = "miss";
      }
    }
  }
  return result;
}

/** @type {import("../types").EmojiMatchThemes} */
const emojiMatchThemes = {
  nature: {
    match: "🍀",
    present: "🌻",
    miss: "🕸️",
  },
  fruit: {
    match: "🍏",
    present: "🍊",
    miss: "🥥",
  },
  vegetable: {
    match: "🥦",
    present: "🍄",
    miss: "🍽️",
  },
  tree: {
    match: "🌳",
    present: "🍁",
    miss: "🪨",
  },
  circle: {
    match: "🟢",
    present: "🟠",
    miss: "⚫️",
  },
  poop: {
    match: "🤢",
    present: "💩",
    miss: "🧻",
  },
};

/** @returns {import("../types").EmojiMatchThemeValue} */
function randomEmojiMatchTheme() {
  const themes = Object.values(emojiMatchThemes);
  return themes[Math.floor(Math.random() * themes.length)];
}

/**
 * @param {import("../types").Guess[]} guesses
 * @param {import("../types").EmojiMatchThemeKey} theme
 */
function guessesAsEmojis(guesses, theme) {
  const emojiTheme = emojiMatchThemes[theme] || randomEmojiMatchTheme();
  return guesses
    .map((guess) =>
      guess.map((letter) => emojiTheme[letter.state] || "").join("")
    )
    .join("\n")
    .trim();
}

if (typeof module !== "undefined") {
  module.exports = {
    compareTargetAndGuess,
    daysBetween,
    emojiMatchThemes,
    futureWords,
    getHolidayPuzzle,
    getHolidayPuzzlePossibilities,
    getPuzzlesForDate,
    getTodayPuzzleId,
    getTodayPuzzles,
    guessesAsEmojis,
    words,
  };
}
